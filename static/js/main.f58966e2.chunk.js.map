{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","utils/fetchClient.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","_ref","posts","selectedPost","selectPost","_jsxs","children","_jsx","className","map","post","id","title","type","classNames","onClick","onButtonClick","Loader","NewCommentForm","onSubmit","loading","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","hasAuthorError","setHasAuthorError","_useState5","_useState6","email","setEmail","_useState7","_useState8","hasEmailError","setHasEmailError","_useState9","_useState10","body","setBody","_useState11","_useState12","hasBodyError","setHasBodyError","event","preventDefault","trim","onReset","htmlFor","placeholder","value","onChange","target","request","url","delay","data","arguments","length","undefined","options","method","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","json","client","PostDetails","setLoading","errorMessage","setErrorMessage","comments","setComments","isOpenEditor","setIsOpenEditor","isCreatingComment","setIsCreatingComment","useEffect","concat","catch","finally","_Fragment","comment","href","commentId","prevComments","filter","prevComment","_objectSpread","postId","newComment","currentComments","_toConsumableArray","UserSelector","_selectedUser$name","users","selectedUser","onSelect","openMenu","setOpenMenu","ref","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","role","user","handleSelectUser","App","setUsers","setPosts","setSelectedUser","setSelectedPost","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f58966e2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[];\n  selectedPost: Post | null;\n  selectPost: (post: Post | null) => void;\n\n};\n\nexport const PostsList: React.FC<Props> = (\n  {\n    posts, selectedPost, selectPost,\n  },\n) => {\n  const onButtonClick = (post: Post) => {\n    if (post.id === selectedPost?.id) {\n      selectPost(null);\n    } else {\n      selectPost(post);\n    }\n  };\n\n  return (\n\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts?.map((post) => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{ post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                { post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={\n                    classNames('button is-link',\n                      { 'is-light': post.id !== selectedPost?.id })\n                  }\n                  onClick={() => onButtonClick(post)}\n                >\n                  {post.id === selectedPost?.id ? 'Close' : 'Open'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { CommentData } from '../types/Comment';\n\ntype Props = {\n  onSubmit: (comment: CommentData) => void;\n  loading: boolean;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  onSubmit,\n  loading,\n}) => {\n  const [name, setName] = useState('');\n  const [hasAuthorError, setHasAuthorError] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [hasEmailError, setHasEmailError] = useState(false);\n\n  const [body, setBody] = useState('');\n  const [hasBodyError, setHasBodyError] = useState(false);\n\n\n  const handleAuthorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setHasAuthorError(false);\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setHasEmailError(false);\n  };\n\n  const handleBodyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(event.target.value);\n    setHasBodyError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasAuthorError(!name.trim());\n    setHasEmailError(!email.trim());\n    setHasBodyError(!body.trim());\n\n    if (!name.trim() || !email.trim() || !body.trim()) {\n      return;\n    }\n\n    const newComment = { name, email, body };\n\n    onSubmit(newComment);\n\n    setBody('');\n  };\n\n  const handleReset = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n    setHasAuthorError(false);\n    setHasEmailError(false);\n    setHasBodyError(false);\n  };\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={\n              classNames('input', { 'is-danger': hasAuthorError })\n            }\n            value={name}\n            onChange={handleAuthorChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {hasAuthorError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasAuthorError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={\n              classNames('input', { 'is-danger': hasEmailError })\n            }\n            value={email}\n            onChange={handleEmailChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {hasEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            value={body}\n            className={\n              classNames('textarea', { 'is-danger': hasBodyError })\n            }\n            onChange={handleBodyChange}\n          />\n        </div>\n\n        {hasBodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={\n              classNames('button is-link', { 'is-loading': loading })\n            }\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\nimport { Comment, CommentData } from '../types/Comment';\n\ntype Props = {\n  post: Post | null;\n};\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isOpenEditor, setIsOpenEditor] = useState(false);\n  const [isCreatingComment, setIsCreatingComment] = useState(false);\n\n  const fetchComments = () => {\n    if (!post) {\n      return;\n    }\n\n    setErrorMessage('');\n    setIsOpenEditor(false);\n    setLoading(true);\n\n    client.get<Comment[]>(`/comments?postId=${post.id}`)\n      .then((data) => setComments(data))\n      .catch(() => setErrorMessage('Something went wrong!'))\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(fetchComments, [post]);\n\n  const addComment = (comment: CommentData) => {\n    if (!post) {\n      return;\n    }\n\n    setErrorMessage('');\n    setIsCreatingComment(true);\n\n    client.post<Comment>('/comments',\n      { ...comment, postId: post.id })\n      .then((newComment) => setComments(\n        (currentComments) => [...currentComments, newComment],\n      )).catch(() => setErrorMessage('Something went wrong!'))\n      .finally(() => setIsCreatingComment(false));\n  };\n\n  const deleteComment = (commentId: number) => {\n    client.delete(`/comments/${commentId}`);\n\n    setComments((prevComments) => prevComments\n      .filter(prevComment => prevComment.id !== commentId));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {loading && <Loader />}\n\n          {errorMessage && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              {errorMessage}\n            </div>\n          )}\n\n          {comments.length === 0 && !loading && !errorMessage && (\n            (\n              <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                No comments yet\n              </p>\n            )\n          )}\n\n          {comments.length > 0 && !loading && !errorMessage && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments.map((comment) => (\n                <article\n                  key={comment.id}\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                >\n                  <div className=\"message-header\">\n                    <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n                      {comment.name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!isOpenEditor && !loading && !errorMessage && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsOpenEditor(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isOpenEditor && (\n          <NewCommentForm\n            loading={isCreatingComment}\n            onSubmit={addComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[];\n  selectedUser: User | null;\n  onSelect: (user: User) => void;\n};\n\nexport const UserSelector: React.FC<Props> = (\n  { users, selectedUser, onSelect },\n) => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        setOpenMenu(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  const handleSelectUser = (\n    event: React.MouseEvent<HTMLAnchorElement>, user: User,\n  ) => {\n    event.preventDefault();\n    onSelect(user);\n    setOpenMenu(false);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', {\n        'is-active': openMenu,\n      })}\n      ref={ref}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setOpenMenu(!openMenu)}\n        >\n          <span>\n            {selectedUser?.name ?? 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map((user) => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={classNames('dropdown-item', {\n                'is-active': selectedUser?.id === user.id,\n              })}\n              onClick={(event) => handleSelectUser(event, user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { client } from './utils/fetchClient';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  // eslint-disable-next-line max-len\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  const fetchUsers = () => {\n    setErrorMessage('');\n\n    client.get<User[]>('/users').then((data) => {\n      setUsers(data);\n    }).catch(() => {\n      setErrorMessage('Something went wrong!');\n    });\n  };\n\n  const fetchPosts = () => {\n    if (!selectedUser) {\n      return;\n    }\n\n    setErrorMessage('');\n    setLoading(true);\n    setSelectedPost(null);\n\n    client.get<Post[]>(`/posts?userId=${selectedUser?.id}`).then((data) => {\n      setPosts(data);\n    }).catch(() => {\n      setErrorMessage('Something went wrong!');\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  useEffect(fetchUsers, []);\n  useEffect(fetchPosts, [selectedUser?.id]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectedUser={selectedUser}\n                  onSelect={setSelectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {loading && selectedUser && (<Loader />)}\n\n                {errorMessage && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    {errorMessage}\n                  </div>\n                )}\n\n                {selectedUser\n                  && posts.length === 0\n                  && !loading\n                  && !errorMessage\n                  && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )}\n\n                {posts.length > 0 && !loading && !errorMessage && (\n                  <PostsList\n                    posts={posts}\n                    selectedPost={selectedPost}\n                    selectPost={setSelectedPost}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': !!selectedPost },\n            )}\n          >\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  post={selectedPost}\n                />\n              </div>\n            )}\n          </div>\n\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}